{"version":3,"file":"static/js/92.15b4bc2c.chunk.js","mappings":"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","sources":["projects/advanced/MyCalendar/features/events/eventsSlice.js","projects/advanced/MyCalendar/app/store.js","projects/advanced/MyCalendar/features/events/SingleEvent.js","projects/advanced/MyCalendar/features/events/AddNewEvent.js","projects/advanced/MyCalendar/features/events/Alarm.js","projects/advanced/MyCalendar/MonthInput.js","projects/advanced/MyCalendar/YearInput.js","projects/advanced/MyCalendar/CalendarContainer.js","projects/advanced/MyCalendar/features/events/SingleDayEvents.js","projects/advanced/MyCalendar/Container.js","projects/advanced/MyCalendar/index.js"],"sourcesContent":["import {\n  createEntityAdapter,\n  createSelector,\n  createSlice,\n} from \"@reduxjs/toolkit\";\n\nconst eventsAdapter = createEntityAdapter({\n  sortComparer: (a, b) => a.title.localeCompare(b.title),\n});\n\nconst initialState = eventsAdapter.getInitialState();\n\nconst eventsSlice = createSlice({\n  name: \"events\",\n  initialState,\n  reducers: {\n    setAllEvents: (state, action) => {\n      eventsAdapter.upsertMany(state, action.payload);\n    },\n    addEvent: (state, action) => {\n      eventsAdapter.addOne(state, action.payload);\n    },\n    removeEvent: (state, action) => {\n      eventsAdapter.removeOne(state, action.payload);\n    },\n    updateEvent: (state, action) => {\n      eventsAdapter.updateOne(state, action.payload);\n    },\n  },\n});\n\nexport const {\n  selectIds: selectEventIds,\n  selectAll: selectAllEvents,\n  selectById: selectEventById,\n} = eventsAdapter.getSelectors((state) => state.events);\n\nexport const selectEventsByDay = createSelector(\n  [selectAllEvents, (state, day) => day],\n  (events, day) =>\n    events.filter((e) => {\n      const iso = new Date(e.date);\n      return iso.toISOString().slice(0, 10) === day.toISOString().slice(0, 10);\n    })\n);\n\nexport const selectEventsByActiveReminders = createSelector(\n  selectAllEvents,\n  (events) => {\n    const today = new Date();\n    return events.filter((e) => e.reminder && new Date(e.reminder) <= today);\n  }\n);\n\nexport const selectDaysOfEvents = createSelector(selectAllEvents, (events) =>\n  events.map((e) => new Date(e.date).getDate())\n);\n\nexport const { setAllEvents, addEvent, removeEvent, updateEvent } =\n  eventsSlice.actions;\n\nexport default eventsSlice.reducer;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport eventsReducer from \"../features/events/eventsSlice\";\n\nconst store = configureStore({\n  reducer: {\n    events: eventsReducer,\n  },\n});\n\nexport default store;\n","import { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { removeEvent, updateEvent } from \"./eventsSlice\";\n\nconst SingleEvent = ({ event }) => {\n  const [show, setShow] = useState(false);\n  const [reminder, setReminder] = useState(\"\");\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [date, setDate] = useState(\"\");\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (event) {\n      setReminder(event.reminder);\n      setTitle(event.title);\n      setContent(event.content);\n      setDate(new Date(event.date).toISOString().substring(0, 10));\n    }\n  }, [event]);\n\n  if (!event) {\n    return <div />;\n  }\n\n  const handleUpdate = () => {\n    let selectedDate = null;\n    if (reminder) {\n      selectedDate = new Date(date);\n      selectedDate.setDate(selectedDate.getDate() - reminder);\n    }\n    dispatch(\n      updateEvent({\n        id: event.id,\n        changes: {\n          title,\n          content,\n          date: new Date(date).toString(),\n          reminder: selectedDate ? selectedDate.toString() : selectedDate,\n        },\n      })\n    );\n    setShow(false);\n  };\n\n  const handleDelete = () => {\n    dispatch(removeEvent(event.id));\n  };\n\n  return !show ? (\n    <div className=\"single-event\">\n      <button\n        id=\"trash-button\"\n        className=\"fa fa-trash\"\n        onClick={handleDelete}\n      />\n      <p>\n        {event.date\n          .toLocaleString(\"sv\", { timeZone: \"Europe/Paris\" })\n          .slice(0, 15)}\n      </p>\n      <p>Title: {event.title}</p>\n      <p>Content: {event.content}</p>\n      <p>Reminder: {event.reminder ? event.reminder.slice(0, 10) : \"none\"}</p>\n      <button\n        id=\"update-button\"\n        className=\"fa fa-pencil\"\n        onClick={() => setShow(!show)}\n      />\n    </div>\n  ) : (\n    <div className=\"single-event\">\n      <div className=\"new-event-button\">\n        <div className={`new-event ${show && \"show-new-event\"}`}>\n          <p>Change event</p>\n          <div className=\"new-input\">\n            <label htmlFor=\"title\">Title</label>\n            <input\n              type=\"text\"\n              value={title}\n              name=\"title\"\n              onChange={(e) => setTitle(e.target.value)}\n            />\n          </div>\n          <div className=\"new-input\">\n            <label htmlFor=\"content\">Content</label>\n            <input\n              type=\"text-area\"\n              value={content}\n              name=\"content\"\n              onChange={(e) => setContent(e.target.value)}\n            />\n          </div>\n          <div className=\"new-input\">\n            <label htmlFor=\"date\">Date (YYYY-MM-DD): </label>\n            <input\n              id=\"date\"\n              type=\"text\"\n              name=\"date\"\n              value={date}\n              onChange={(e) => setDate(e.target.value)}\n            />\n          </div>\n          <div className=\"new-input\">\n            <label htmlFor=\"reminder\">Reminder (days before the event): </label>\n            <input\n              id=\"reminder\"\n              type=\"number\"\n              name=\"reminder\"\n              min=\"0\"\n              max=\"370\"\n              value={reminder || 0}\n              onChange={(e) => setReminder(Number(e.target.value))}\n            />\n          </div>\n          <button onClick={handleUpdate}>Update event</button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SingleEvent;\n","import { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addEvent, selectEventIds } from \"./eventsSlice\";\n\nconst AddNewEvent = ({ year, month, day }) => {\n  const [show, setShow] = useState(false);\n  const [reminder, setReminder] = useState(0);\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const id = useSelector(selectEventIds).length;\n  const dispatch = useDispatch();\n\n  const handleNewEvent = () => {\n    let selectedDate = null;\n    if (reminder) {\n      selectedDate = new Date(year, month, day, 12);\n      selectedDate.setDate(selectedDate.getDate() - reminder);\n    }\n    const date = new Date(year, month, day, 12).toString();\n    dispatch(\n      addEvent({\n        id: id + title,\n        date,\n        reminder: selectedDate ? selectedDate.toString() : selectedDate,\n        title,\n        content,\n      })\n    );\n  };\n\n  const handleClear = () => {\n    setTitle(\"\");\n    setContent(\"\");\n    setReminder(0);\n  };\n\n  return (\n    <div className=\"new-event-button\">\n      <button onClick={() => setShow(!show)}>Add new event</button>\n      <div className={`new-event ${show && \"show-new-event\"}`}>\n        <button\n          id=\"clear-button\"\n          className=\"fa fa-trash\"\n          onClick={handleClear}\n        />\n        <p>New event for {new Date(year, month, day, 12).toDateString()}</p>\n        <div className=\"new-input\">\n          <label htmlFor=\"title\">Title</label>\n          <input\n            type=\"text\"\n            value={title}\n            name=\"title\"\n            onChange={(e) => setTitle(e.target.value)}\n          />\n        </div>\n        <div className=\"new-input\">\n          <label htmlFor=\"content\">Content</label>\n          <input\n            type=\"text-area\"\n            value={content}\n            name=\"content\"\n            onChange={(e) => setContent(e.target.value)}\n          />\n        </div>\n        <div className=\"new-input\">\n          <label htmlFor=\"reminder\">Reminder (days before the event): </label>\n          <input\n            id=\"reminder\"\n            type=\"number\"\n            name=\"reminder\"\n            min=\"0\"\n            max=\"370\"\n            value={reminder}\n            onChange={(e) => setReminder(Number(e.target.value))}\n          />\n        </div>\n        <button onClick={handleNewEvent}>Create new event</button>\n      </div>\n    </div>\n  );\n};\n\nexport default AddNewEvent;\n","import { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { selectEventsByActiveReminders } from \"./eventsSlice\";\n\nconst Alarm = () => {\n  const [show, setShow] = useState(false);\n  const reminders = useSelector(selectEventsByActiveReminders);\n\n  useEffect(() => {\n    if (reminders.length) {\n      setShow(true);\n    }\n  }, [reminders]);\n\n  const handleClose = () => {\n    setShow(false);\n    const index = setTimeout(() => setShow(true), 60000);\n    return () => clearTimeout(index);\n  };\n\n  return show ? (\n    <div className=\"reminders-container single-event alarm\">\n      <button id=\"close-button\" className=\"fa fa-close\" onClick={handleClose} />\n      <p>\n        <strong>Upcomming events: </strong>\n      </p>\n      {reminders.map((r) => {\n        return (\n          <div key={r.id}>\n            <p>\n              {r.date.slice(0, 10)} {r.title}\n            </p>\n          </div>\n        );\n      })}\n    </div>\n  ) : (\n    <div />\n  );\n};\n\nexport default Alarm;\n","const MonthInput = ({ month, setMonth }) => {\n  return (\n    <select\n      name=\"months\"\n      defaultValue={month}\n      onChange={(e) => setMonth(Number(e.target.value))}\n    >\n      <option value={0}>January</option>\n      <option value={1}>February</option>\n      <option value={2}>March</option>\n      <option value={3}>April</option>\n      <option value={4}>May</option>\n      <option value={5}>June</option>\n      <option value={6}>July</option>\n      <option value={7}>August</option>\n      <option value={8}>September</option>\n      <option value={9}>October</option>\n      <option value={10}>November</option>\n      <option value={11}>December</option>\n    </select>\n  );\n};\n\nexport default MonthInput;\n","const YearInput = ({ year, setYear }) => {\n  return (\n    <input\n      type=\"number\"\n      step=\"1\"\n      value={year}\n      placeholder=\"Enter year\"\n      onChange={(e) => setYear(e.target.value)}\n    />\n  );\n};\n\nexport default YearInput;\n","import { useState } from \"react\";\nimport AddNewEvent from \"./features/events/AddNewEvent\";\nimport Alarm from \"./features/events/Alarm\";\nimport MonthInput from \"./MonthInput\";\nimport YearInput from \"./YearInput\";\n\nconst CalendarContainer = ({\n  sortedDates,\n  setDetailed,\n  setDay,\n  year,\n  setYear,\n  month,\n  setMonth,\n  day,\n}) => {\n  const [selected, setSelected] = useState(new Date().getDate());\n  const today = new Date()\n    .toLocaleString(\"sv\", { timeZone: \"Europe/Paris\" })\n    .slice(0, 10);\n\n  return (\n    <div>\n      <div id=\"inputs\">\n        <YearInput year={year} setYear={setYear} />\n        <MonthInput month={month} setMonth={setMonth} />\n      </div>\n      <table className=\"calendar-table\">\n        <thead>\n          <tr>\n            <th>Mon</th>\n            <th>Tue</th>\n            <th>Wed</th>\n            <th>Thu</th>\n            <th>Fri</th>\n            <th>Sat</th>\n            <th>Sun</th>\n          </tr>\n        </thead>\n        <tbody>\n          {sortedDates.map((w, i) => {\n            return (\n              <tr key={i}>\n                {w.map((d, i) => (\n                  <td\n                    align=\"center\"\n                    key={i}\n                    className={`${d.active ? \"current\" : \"not-current\"} ${\n                      d.date\n                        ?.toLocaleString(\"sv\", { timeZone: \"Europe/Paris\" })\n                        .slice(0, 10) === today && \"today\"\n                    } ${selected === d.day && \"selected-date\"} ${\n                      d.events && \"with-events\"\n                    }`}\n                    onClick={() => {\n                      setDay(d.day);\n                      setSelected(d.day);\n                      d.active && setDetailed(true);\n                    }}\n                  >\n                    {d.day}\n                  </td>\n                ))}\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n      <AddNewEvent year={year} month={month} day={day} />\n      <Alarm />\n    </div>\n  );\n};\n\nexport default CalendarContainer;\n","import { useSelector } from \"react-redux\";\nimport { selectEventsByDay } from \"./eventsSlice\";\nimport SingleEvent from \"./SingleEvent\";\n\nconst SingleDayEvents = ({ day, show, setShow }) => {\n  const events = useSelector((state) => selectEventsByDay(state, day));\n\n  return (\n    <div\n      className={`${(!show || !events.length) && \"events-hide\"} events-show`}\n    >\n      <button\n        id=\"close-button\"\n        className=\"fa fa-close\"\n        onClick={() => setShow(false)}\n      />\n      <h4>Events:</h4>\n      {events.map((e) => (\n        <SingleEvent key={e.id} event={e} />\n      ))}\n    </div>\n  );\n};\n\nexport default SingleDayEvents;\n","import { useEffect, useMemo, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useSelector } from \"react-redux\";\nimport CalendarContainer from \"./CalendarContainer\";\nimport {\n  selectAllEvents,\n  selectDaysOfEvents,\n  setAllEvents,\n} from \"./features/events/eventsSlice\";\nimport SingleDayEvents from \"./features/events/SingleDayEvents\";\n\nconst Container = () => {\n  const [year, setYear] = useState(new Date().getFullYear());\n  const [month, setMonth] = useState(new Date().getMonth());\n  const [day, setDay] = useState(new Date().getDate());\n  const [daysInMonth, setDaysInMonth] = useState(null);\n  const [days, setDays] = useState([]);\n  const [detailed, setDetailed] = useState(false);\n\n  const dispatch = useDispatch();\n  const events = useSelector(selectAllEvents);\n  const withEvents = useSelector(selectDaysOfEvents);\n\n  useEffect(() => {\n    const locStorage = window.localStorage.getItem(\"calendarAppEvents\");\n    if (locStorage) {\n      dispatch(setAllEvents(JSON.parse(locStorage)));\n    }\n  }, []);\n\n  useEffect(() => {\n    setDaysInMonth(new Date(year, month + 1, 0).getDate());\n  }, [year, month]);\n\n  useEffect(() => {\n    const allDates = [];\n    for (let i = 1; i <= daysInMonth; i++) {\n      allDates.push(new Date(year, month, i));\n    }\n    setDays(allDates);\n  }, [daysInMonth, year, month]);\n\n  useEffect(() => {\n    if (events) {\n      window.localStorage.setItem(\"calendarAppEvents\", JSON.stringify(events));\n    }\n  }, [events]);\n\n  const dates = useMemo(() => {\n    let datesCopy = days.concat();\n    let sortedDates = [];\n    const weekdays = [\n      \"Monday\",\n      \"Tuesday\",\n      \"Wednesday\",\n      \"Thursday\",\n      \"Friday\",\n      \"Saturday\",\n      \"Sunday\",\n    ];\n\n    let i = 0;\n    while (datesCopy.length) {\n      let week = [];\n      for (const day of weekdays) {\n        if (days[i]?.toLocaleString(\"en-US\", { weekday: \"long\" }) === day) {\n          const newDay = datesCopy.shift();\n          const events = withEvents.includes(i + 1) ? true : false;\n          week.push({ day: i + 1, date: newDay, active: true, events });\n          i++;\n        } else {\n          week.push({ day: null, date: null, active: false });\n        }\n      }\n      sortedDates.push(week);\n    }\n    return sortedDates;\n  }, [month, days, events]);\n\n  if (!days.length) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <div id=\"main-container\">\n      {days.length && (\n        <CalendarContainer\n          sortedDates={dates}\n          setDetailed={setDetailed}\n          setDay={setDay}\n          year={year}\n          setYear={setYear}\n          month={month}\n          setMonth={setMonth}\n          day={day}\n        />\n      )}\n      <SingleDayEvents\n        day={new Date(year, month, day, 12)}\n        show={detailed}\n        setShow={setDetailed}\n      />\n    </div>\n  );\n};\n\nexport default Container;\n","import { Provider } from \"react-redux\";\nimport { apps } from \"../../../applications\";\nimport store from \"./app/store\";\nimport SingleEvent from \"./features/events/SingleEvent\";\nimport \"./myCalendar.css\";\nimport Container from \"./Container\";\n\nconst MyCalendar = () => {\n  const app = apps[7];\n\n  return (\n    <Provider store={store}>\n      <div id=\"calendar-container\">\n        <h3>{app.name}</h3>\n        <SingleEvent />\n        <Container />\n      </div>\n    </Provider>\n  );\n};\n\nexport default MyCalendar;\n"],"names":["eventsAdapter","createEntityAdapter","sortComparer","a","b","title","localeCompare","initialState","getInitialState","eventsSlice","createSlice","name","reducers","setAllEvents","state","action","upsertMany","payload","addEvent","addOne","removeEvent","removeOne","updateEvent","updateOne","getSelectors","events","selectEventIds","selectIds","selectAllEvents","selectAll","selectEventsByDay","selectById","createSelector","day","filter","e","Date","date","toISOString","slice","selectEventsByActiveReminders","today","reminder","selectDaysOfEvents","map","getDate","actions","configureStore","reducer","eventsReducer","event","useState","show","setShow","setReminder","setTitle","content","setContent","setDate","dispatch","useDispatch","useEffect","substring","className","htmlFor","type","value","onChange","target","id","min","max","Number","onClick","selectedDate","changes","toString","toLocaleString","timeZone","year","month","useSelector","length","toDateString","reminders","index","setTimeout","clearTimeout","r","setMonth","defaultValue","setYear","step","placeholder","sortedDates","setDetailed","setDay","selected","setSelected","w","i","d","align","active","getFullYear","getMonth","daysInMonth","setDaysInMonth","days","setDays","detailed","withEvents","locStorage","window","localStorage","getItem","JSON","parse","allDates","push","setItem","stringify","dates","useMemo","datesCopy","concat","weekdays","week","weekday","newDay","shift","includes","app","apps","store"],"sourceRoot":""}