{"version":3,"file":"static/js/58.9667b804.chunk.js","mappings":"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","sources":["projects/beginner/ChristmasLights/Bulb.js","projects/beginner/ChristmasLights/index.js"],"sourcesContent":["import styled from \"@emotion/styled\";\nimport { Box, Tooltip, Typography } from \"@mui/material\";\nimport { useEffect, useState } from \"react\";\n\nconst Light = styled(\"div\", {\n  shouldForwardProp: (prop) =>\n    prop !== \"on\" &&\n    prop !== \"color\" &&\n    prop !== \"power\" &&\n    prop !== \"intensity\" &&\n    prop !== \"index\",\n})(({ theme, on, color, power, intensity, index }) => ({\n  width: \"90%\",\n  height: \"90%\",\n  borderRadius: \"50% 50% 50% 50% / 50% 50% 50% 50%\",\n  background: `radial-gradient(${color}, dark${color})`,\n  backgroundColor: color,\n  opacity: !power ? 0.5 : on ? 1 : 0.8,\n  zIndex: index,\n  boxShadow: on\n    ? `0px 0px ${intensity}px ${intensity / 2}px ${color}`\n    : `0px 0px 0px 0px ${color}`,\n  transition: `${theme.transitions.create(\n    [\"box-shadow\", \"opacity\", \"transform\"],\n    {\n      duration: 500,\n    }\n  )}`,\n}));\n\nconst colors = [\"red\", \"cyan\", \"orange\", \"green\", \"magenta\"];\n\nconst Bulb = ({\n  power,\n  time,\n  position,\n  color,\n  handleColor,\n  id,\n  intensity,\n  program,\n  quantity,\n}) => {\n  const [on, setOn] = useState(false);\n  const [colorIndex, setColorIndex] = useState(0);\n\n  useEffect(() => {\n    let lightInterval;\n    let timeoutInterval;\n    let auxiliar1;\n    let auxiliar2;\n    if (program === \"alternate\") {\n      if (power && position % 2) {\n        setOn((p) => !p);\n        lightInterval = setInterval(() => setOn((p) => !p), time);\n      } else if (power && !(position % 2)) {\n        timeoutInterval = setTimeout(() => {\n          setOn((p) => !p);\n          lightInterval = setInterval(() => setOn((p) => !p), time);\n        }, time);\n      } else {\n        setOn(false);\n      }\n      return () => {\n        setOn(false);\n        clearTimeout(timeoutInterval);\n        clearInterval(lightInterval);\n      };\n    } else {\n      if (power) {\n        timeoutInterval = setTimeout(() => {\n          setOn(true);\n          auxiliar1 = setTimeout(() => setOn(false), time / 10);\n          lightInterval = setInterval(() => {\n            setOn(true);\n            auxiliar2 = setTimeout(() => setOn(false), time / 10);\n          }, (time / 10) * quantity);\n        }, (time / 10) * id);\n      } else {\n        setOn(false);\n      }\n\n      return () => {\n        setOn(false);\n        clearTimeout(timeoutInterval);\n        clearTimeout(auxiliar1);\n        clearTimeout(auxiliar2);\n        clearInterval(lightInterval);\n      };\n    }\n  }, [power, time, program]);\n\n  useEffect(() => {\n    handleColor(id, colors[colorIndex]);\n  }, [colorIndex]);\n\n  return (\n    <Box\n      sx={{\n        width: \"7vw\",\n        height: \"7vw\",\n        m: 3,\n      }}\n      onClick={() => setColorIndex((p) => (p === 4 ? 0 : p + 1))}\n    >\n      <Tooltip\n        title={\n          <Typography variant=\"caption\">\n            Click on the bulb to change the color\n          </Typography>\n        }\n      >\n        <Light\n          on={on}\n          color={color}\n          power={power}\n          intensity={intensity}\n          index={id}\n        />\n      </Tooltip>\n    </Box>\n  );\n};\n\nexport default Bulb;\n","import {\n  Box,\n  Button,\n  FormControl,\n  FormControlLabel,\n  FormLabel,\n  IconButton,\n  Paper,\n  Radio,\n  RadioGroup,\n  Slide,\n  Stack,\n  Switch,\n  TextField,\n  Typography,\n} from \"@mui/material\";\nimport SettingsIcon from \"@mui/icons-material/Settings\";\nimport { useEffect, useState } from \"react\";\nimport { apps } from \"../../../applications\";\nimport Bulb from \"./Bulb\";\nimport { useTheme } from \"@emotion/react\";\n\nconst initialBulb = {\n  id: 0,\n  color: \"red\",\n  interval: 2000,\n  intensity: 30,\n};\n\nconst ChristmasLights = () => {\n  const [power, setPower] = useState(false);\n  const [time, setTime] = useState(2000);\n  const [quantity, setQuantity] = useState(7);\n  const [bulbs, setBulbs] = useState([]);\n  const [checked, setChecked] = useState(false);\n  const [settings, setSettings] = useState(false);\n  const [intensity, setIntensity] = useState(30);\n  const [program, setProgram] = useState(\"alternate\");\n  const lightsOn = useTheme().palette.mode === \"light\";\n\n  const app = apps[3];\n\n  const handleColor = (id, color) => {\n    setBulbs((p) => p.map((b) => (b.id !== id ? b : { ...b, color: color })));\n  };\n\n  useEffect(() => {\n    setBulbs(\n      [...Array(quantity).keys()].map((b) => ({\n        ...initialBulb,\n        id: b,\n        interval: time,\n      }))\n    );\n  }, [quantity]);\n\n  useEffect(() => {\n    setBulbs((p) =>\n      p.map((b) => ({\n        ...b,\n        interval: time,\n        intensity,\n      }))\n    );\n  }, [settings]);\n\n  return (\n    <Box\n      sx={{\n        mt: \"3%\",\n        ml: \"1%\",\n        mb: \"3%\",\n        mr: \"1%\",\n        paddingTop: 1,\n        paddingBottom: 1,\n        minHeight: \"70vh\",\n        borderRadius: 5,\n        position: \"relative\",\n        backgroundColor: \"lights.main\",\n        color: \"lights.contrastText\",\n      }}\n    >\n      <Stack sx={{ m: 2 }} alignItems=\"center\">\n        <IconButton\n          sx={{ position: \"absolute\", top: 0, right: 0 }}\n          onClick={() => setChecked(!checked)}\n        >\n          <SettingsIcon />\n        </IconButton>\n        <Box\n          sx={{\n            width: 150,\n            position: \"absolute\",\n            top: 50,\n            right: 5,\n            zIndex: 2000,\n          }}\n        >\n          <Slide direction=\"left\" in={checked} mountOnEnter unmountOnExit>\n            <Paper sx={{ p: 2 }}>\n              <Stack spacing={1}>\n                <TextField\n                  value={time / 1000}\n                  onChange={(e) => setTime(Number(e.target.value) * 1000)}\n                  size=\"small\"\n                  type=\"number\"\n                  label=\"Set interval\"\n                  InputProps={{\n                    inputProps: {\n                      max: 10,\n                      min: 1,\n                    },\n                  }}\n                />\n                <TextField\n                  value={intensity / 10}\n                  onChange={(e) => setIntensity(Number(e.target.value) * 10)}\n                  size=\"small\"\n                  type=\"number\"\n                  label=\"Set intensity\"\n                  InputProps={{\n                    inputProps: {\n                      max: 10,\n                      min: 1,\n                    },\n                  }}\n                />\n                <TextField\n                  value={quantity}\n                  onChange={(e) => setQuantity(Number(e.target.value))}\n                  size=\"small\"\n                  type=\"number\"\n                  label=\"Set quantity\"\n                  InputProps={{\n                    inputProps: {\n                      max: 20,\n                      min: 1,\n                    },\n                  }}\n                />\n                <FormControl>\n                  <FormLabel id=\"program-group-label\">\n                    <Typography variant=\"body2\">Choose program</Typography>\n                  </FormLabel>\n                  <RadioGroup\n                    value={program}\n                    onChange={(e) => setProgram(e.target.value)}\n                    name=\"radio-buttons-group\"\n                  >\n                    <FormControlLabel\n                      value=\"alternate\"\n                      control={<Radio size=\"small\" />}\n                      label={\n                        <Typography variant=\"caption\">alternate</Typography>\n                      }\n                    />\n                    <FormControlLabel\n                      value=\"iterate\"\n                      control={<Radio size=\"small\" />}\n                      label={<Typography variant=\"caption\">iterate</Typography>}\n                    />\n                  </RadioGroup>\n                </FormControl>\n                <Button size=\"small\" onClick={() => setSettings((p) => !p)}>\n                  Set\n                </Button>\n              </Stack>\n            </Paper>\n          </Slide>\n        </Box>\n        <Typography\n          align=\"center\"\n          variant=\"h4\"\n          gutterBottom\n          sx={{ textShadow: \"0px 0px 20px\" }}\n        >\n          {app.name}\n          {lightsOn && \" (set the dark mode!)\"}\n        </Typography>\n        <Stack\n          direction=\"row\"\n          justifyContent=\"center\"\n          flexWrap=\"wrap\"\n          sx={{ mt: 5, mb: 5 }}\n        >\n          {bulbs.map((p) => (\n            <Bulb\n              key={p.id}\n              id={p.id}\n              position={p.id}\n              power={power}\n              time={p.interval}\n              color={p.color}\n              intensity={p.intensity}\n              handleColor={handleColor}\n              program={program}\n              quantity={quantity}\n            />\n          ))}\n        </Stack>\n        <Stack direction=\"row\" alignItems=\"center\">\n          <Typography variant=\"body2\">off</Typography>\n          <Switch\n            size=\"large\"\n            color=\"error\"\n            value={power}\n            onClick={() => setPower((prev) => !prev)}\n          />\n          <Typography variant=\"body2\">on</Typography>\n        </Stack>\n      </Stack>\n    </Box>\n  );\n};\n\nexport default ChristmasLights;\n"],"names":["Light","styled","shouldForwardProp","prop","theme","on","color","power","intensity","index","width","height","borderRadius","background","backgroundColor","opacity","zIndex","boxShadow","transition","transitions","create","duration","colors","time","position","handleColor","id","program","quantity","useState","setOn","colorIndex","setColorIndex","useEffect","lightInterval","timeoutInterval","auxiliar1","auxiliar2","p","setInterval","setTimeout","clearTimeout","clearInterval","Box","sx","m","onClick","Tooltip","title","Typography","variant","initialBulb","interval","setPower","setTime","setQuantity","bulbs","setBulbs","checked","setChecked","settings","setSettings","setIntensity","setProgram","lightsOn","useTheme","palette","mode","app","apps","map","b","Array","keys","mt","ml","mb","mr","paddingTop","paddingBottom","minHeight","Stack","alignItems","IconButton","top","right","Settings","Slide","direction","in","mountOnEnter","unmountOnExit","Paper","spacing","TextField","value","onChange","e","Number","target","size","type","label","InputProps","inputProps","max","min","FormControl","FormLabel","RadioGroup","name","FormControlLabel","control","Radio","Button","align","gutterBottom","textShadow","justifyContent","flexWrap","Switch","prev"],"sourceRoot":""}